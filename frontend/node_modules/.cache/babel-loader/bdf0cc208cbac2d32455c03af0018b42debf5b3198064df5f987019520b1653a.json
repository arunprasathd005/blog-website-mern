{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern stack\\\\blog app mern\\\\frontend\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Define inline styles\n  const formStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100vh',\n    backgroundColor: '#f9f9f9'\n  };\n  const inputStyle = {\n    padding: '10px',\n    margin: '10px 0',\n    width: '300px',\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    fontSize: '16px'\n  };\n  const buttonStyle = {\n    padding: '10px 20px',\n    backgroundColor: '#008CBA',\n    // Different color for the register button\n    color: 'white',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontSize: '16px'\n  };\n  const buttonHoverStyle = {\n    backgroundColor: '#007bb5'\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: formStyle,\n    onSubmit: register,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: ev => setUsername(ev.target.va),\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        ...buttonStyle,\n        ':hover': buttonHoverStyle\n      },\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"1VH1WKtCY4wEF2iBjlvknCiq3BE=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","formStyle","display","flexDirection","alignItems","justifyContent","height","backgroundColor","inputStyle","padding","margin","width","border","borderRadius","fontSize","buttonStyle","color","cursor","buttonHoverStyle","style","onSubmit","register","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","ev","target","va","_c","$RefreshReg$"],"sources":["E:/mern stack/blog app mern/frontend/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Register = () => {\r\nconst[username,setUsername]=useState('');\r\nconst [password,setPassword]=useState('');\r\n\r\n  // Define inline styles\r\n  const formStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100vh',\r\n    backgroundColor: '#f9f9f9',\r\n  };\r\n\r\n  const inputStyle = {\r\n    padding: '10px',\r\n    margin: '10px 0',\r\n    width: '300px',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '5px',\r\n    fontSize: '16px',\r\n  };\r\n\r\n  const buttonStyle = {\r\n    padding: '10px 20px',\r\n    backgroundColor: '#008CBA', // Different color for the register button\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    fontSize: '16px',\r\n  };\r\n\r\n  const buttonHoverStyle = {\r\n    backgroundColor: '#007bb5',\r\n  };\r\n\r\n  return (\r\n    <form style={formStyle} onSubmit={register}>\r\n    <h1>Register</h1>\r\n      <input type=\"text\" placeholder=\"username\" value={username} onChange={ev=>setUsername(ev.target.va)} style={inputStyle} />\r\n      <input type=\"password\" placeholder=\"password\" style={inputStyle} />\r\n      <button style={{ ...buttonStyle, ':hover': buttonHoverStyle }}>Register</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAK,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,QAAQ,EAACC,WAAW,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;;EAEvC;EACA,MAAMS,SAAS,GAAG;IAChBC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,MAAM,EAAE,OAAO;IACfC,eAAe,EAAE;EACnB,CAAC;EAED,MAAMC,UAAU,GAAG;IACjBC,OAAO,EAAE,MAAM;IACfC,MAAM,EAAE,QAAQ;IAChBC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,KAAK;IACnBC,QAAQ,EAAE;EACZ,CAAC;EAED,MAAMC,WAAW,GAAG;IAClBN,OAAO,EAAE,WAAW;IACpBF,eAAe,EAAE,SAAS;IAAE;IAC5BS,KAAK,EAAE,OAAO;IACdJ,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE,KAAK;IACnBI,MAAM,EAAE,SAAS;IACjBH,QAAQ,EAAE;EACZ,CAAC;EAED,MAAMI,gBAAgB,GAAG;IACvBX,eAAe,EAAE;EACnB,CAAC;EAED,oBACEb,OAAA;IAAMyB,KAAK,EAAElB,SAAU;IAACmB,QAAQ,EAAEC,QAAS;IAAAC,QAAA,gBAC3C5B,OAAA;MAAA4B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfhC,OAAA;MAAOiC,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,UAAU;MAACC,KAAK,EAAEhC,QAAS;MAACiC,QAAQ,EAAEC,EAAE,IAAEjC,WAAW,CAACiC,EAAE,CAACC,MAAM,CAACC,EAAE,CAAE;MAACd,KAAK,EAAEX;IAAW;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzHhC,OAAA;MAAOiC,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,UAAU;MAACT,KAAK,EAAEX;IAAW;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnEhC,OAAA;MAAQyB,KAAK,EAAE;QAAE,GAAGJ,WAAW;QAAE,QAAQ,EAAEG;MAAiB,CAAE;MAAAI,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5E,CAAC;AAEX,CAAC;AAAA9B,EAAA,CA7CKD,QAAQ;AAAAuC,EAAA,GAARvC,QAAQ;AA+Cd,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}