{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern stack\\\\blog app mern\\\\frontend\\\\src\\\\pages\\\\CreatePost.js\",\n  _s = $RefreshSig$();\n// import ReactQuill from \"react-quill\";\n// import 'react-quill/dist/quill.snow.css';\n// import {useState} from \"react\";\n// import {Navigate} from \"react-router-dom\";\n// import Editor from \"../pages/Editor\";\n\n// export default function CreatePost() {\n//   const [title, setTitle] = useState('');\n//   const [summary, setSummary] = useState('');\n//   const [content, setContent] = useState('');\n//   const [files, setFiles] = useState('');\n//   const [redirect, setRedirect] = useState(false);\n\n//   async function createNewPost(ev) {\n\n//     // Check if file is selected\n//     if (!files[0]) {\n//       alert('Please select a file to upload.');\n//       return;\n//     }\n\n//     const data = new FormData();\n//     data.set('title', title);\n//     data.set('summary', summary);\n//     data.set('content', content);\n//     data.set('file', files[0]);  // Ensure file exists\n//     ev.preventDefault();\n//     const response = await fetch('http://localhost:4000/post', {\n//       method: 'POST',\n//       body: data,\n//       credentials: 'include',\n//     });\n\n//     if (response.ok) {\n//       setRedirect(true);\n//     } else {\n//       alert('Failed to create post. Please try again.');\n//     }\n//   }\n\n//   if (redirect) {\n//     return <Navigate to={'/'} />;\n//   }\n\n//   return (\n//     <form onSubmit={createNewPost}>\n//       <input \n//         type=\"text\" \n//         placeholder=\"Title\" \n//         value={title} \n//         onChange={ev => setTitle(ev.target.value)} \n//       />\n//       <input \n//         type=\"text\" \n//         placeholder=\"Summary\" \n//         value={summary} \n//         onChange={ev => setSummary(ev.target.value)} \n//       />\n//       <input \n//         type=\"file\" \n//         onChange={ev => setFiles(ev.target.files)} \n//       />\n//       <Editor value={content} onChange={setContent} />\n//       <button style={{ marginTop: '5px' }}>Create post</button>\n//     </form>\n//   );\n// }\nimport ReactQuill from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css';\nimport { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport Editor from \"../pages/Editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePost() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [files, setFiles] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  async function createNewPost(ev) {\n    ev.preventDefault();\n\n    // Check if file is selected\n    if (!files || files.length === 0) {\n      alert('Please select a file to upload.');\n      return;\n    }\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    data.set('file', files[0]);\n    try {\n      const response = await fetch('http://localhost:4000/post', {\n        method: 'POST',\n        body: data,\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setRedirect(true);\n      } else {\n        alert('Failed to create post. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error creating post:', error);\n      alert('Error creating post. Please try again.');\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: createNewPost,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: ev => setTitle(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Summary\",\n      value: summary,\n      onChange: ev => setSummary(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: ev => setFiles(ev.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      value: content,\n      onChange: setContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: '5px'\n      },\n      disabled: !title || !summary || !content || !files,\n      children: \"Create post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePost, \"dgyyLwXku/v/UNI0MQCR1Q3VqVQ=\");\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["ReactQuill","useState","Navigate","Editor","jsxDEV","_jsxDEV","CreatePost","_s","title","setTitle","summary","setSummary","content","setContent","files","setFiles","redirect","setRedirect","createNewPost","ev","preventDefault","length","alert","data","FormData","set","response","fetch","method","body","credentials","ok","error","console","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","children","type","placeholder","value","onChange","target","style","marginTop","disabled","_c","$RefreshReg$"],"sources":["E:/mern stack/blog app mern/frontend/src/pages/CreatePost.js"],"sourcesContent":["// import ReactQuill from \"react-quill\";\r\n// import 'react-quill/dist/quill.snow.css';\r\n// import {useState} from \"react\";\r\n// import {Navigate} from \"react-router-dom\";\r\n// import Editor from \"../pages/Editor\";\r\n\r\n// export default function CreatePost() {\r\n//   const [title, setTitle] = useState('');\r\n//   const [summary, setSummary] = useState('');\r\n//   const [content, setContent] = useState('');\r\n//   const [files, setFiles] = useState('');\r\n//   const [redirect, setRedirect] = useState(false);\r\n\r\n//   async function createNewPost(ev) {\r\n    \r\n    \r\n//     // Check if file is selected\r\n//     if (!files[0]) {\r\n//       alert('Please select a file to upload.');\r\n//       return;\r\n//     }\r\n\r\n//     const data = new FormData();\r\n//     data.set('title', title);\r\n//     data.set('summary', summary);\r\n//     data.set('content', content);\r\n//     data.set('file', files[0]);  // Ensure file exists\r\n//     ev.preventDefault();\r\n//     const response = await fetch('http://localhost:4000/post', {\r\n//       method: 'POST',\r\n//       body: data,\r\n//       credentials: 'include',\r\n//     });\r\n\r\n//     if (response.ok) {\r\n//       setRedirect(true);\r\n//     } else {\r\n//       alert('Failed to create post. Please try again.');\r\n//     }\r\n//   }\r\n\r\n//   if (redirect) {\r\n//     return <Navigate to={'/'} />;\r\n//   }\r\n\r\n//   return (\r\n//     <form onSubmit={createNewPost}>\r\n//       <input \r\n//         type=\"text\" \r\n//         placeholder=\"Title\" \r\n//         value={title} \r\n//         onChange={ev => setTitle(ev.target.value)} \r\n//       />\r\n//       <input \r\n//         type=\"text\" \r\n//         placeholder=\"Summary\" \r\n//         value={summary} \r\n//         onChange={ev => setSummary(ev.target.value)} \r\n//       />\r\n//       <input \r\n//         type=\"file\" \r\n//         onChange={ev => setFiles(ev.target.files)} \r\n//       />\r\n//       <Editor value={content} onChange={setContent} />\r\n//       <button style={{ marginTop: '5px' }}>Create post</button>\r\n//     </form>\r\n//   );\r\n// }\r\nimport ReactQuill from \"react-quill\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport Editor from \"../pages/Editor\";\r\n\r\nexport default function CreatePost() {\r\n  const [title, setTitle] = useState('');\r\n  const [summary, setSummary] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [files, setFiles] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  async function createNewPost(ev) {\r\n    ev.preventDefault();\r\n\r\n    // Check if file is selected\r\n    if (!files || files.length === 0) {\r\n      alert('Please select a file to upload.');\r\n      return;\r\n    }\r\n\r\n    const data = new FormData();\r\n    data.set('title', title);\r\n    data.set('summary', summary);\r\n    data.set('content', content);\r\n    data.set('file', files[0]);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:4000/post', {\r\n        method: 'POST',\r\n        body: data,\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (response.ok) {\r\n        setRedirect(true);\r\n      } else {\r\n        alert('Failed to create post. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating post:', error);\r\n      alert('Error creating post. Please try again.');\r\n    }\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={createNewPost}>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Title\" \r\n        value={title} \r\n        onChange={ev => setTitle(ev.target.value)} \r\n      />\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Summary\" \r\n        value={summary} \r\n        onChange={ev => setSummary(ev.target.value)} \r\n      />\r\n      <input \r\n        type=\"file\" \r\n        onChange={ev => setFiles(ev.target.files)} \r\n      />\r\n      <Editor value={content} onChange={setContent} />\r\n      <button style={{ marginTop: '5px' }} disabled={!title || !summary || !content || !files}>\r\n        Create post\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}