{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern stack\\\\blog app mern\\\\frontend\\\\src\\\\pages\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modules = {\n  toolbar: [[{\n    'header': '1'\n  }, {\n    'header': '2'\n  }, {\n    'font': []\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    'list': 'ordered'\n  }, {\n    'list': 'bullet'\n  }, {\n    'indent': '-1'\n  }, {\n    'indent': '+1'\n  }], ['link', 'image'], [{\n    'align': []\n  }], ['clean'] // Remove formatting button\n  ]\n};\nconst formats = ['header', 'font', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image', 'align'];\nconst CreatePost = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [file, setFiles] = useState(null); // Changed to null\n  const [redirect, setRedirect] = useState(false);\n  async function createNewPost(ev) {\n    ev.preventDefault(); // Move to the start of the function\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    if (file) {\n      // Only set the file if it exists\n      data.set('file', file[0]); // Set the first file\n    }\n\n    // console.log(file); // Changed from files to file\n\n    // Uncomment and modify this section for your API call\n    const response = await fetch('http://localhost:4000/post', {\n      method: 'POST',\n      body: data // Make sure to send FormData\n    });\n    if (response.ok) {\n      setRedirect(true);\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: createNewPost,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\" // Changed from title\n      ,\n      placeholder: \"Title\",\n      value: title,\n      onChange: ev => setTitle(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\" // Changed from summary\n      ,\n      placeholder: \"Summary\",\n      value: summary,\n      onChange: ev => setSummary(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: ev => setFiles(ev.target.files) // Changed to files\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: content,\n      onChange: setContent,\n      modules: modules,\n      formats: formats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: '5px'\n      },\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePost, \"Vtsawtz6oMde6kHOA+vb98dA37s=\");\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","ReactQuill","Navigate","jsxDEV","_jsxDEV","modules","toolbar","formats","CreatePost","_s","title","setTitle","summary","setSummary","content","setContent","file","setFiles","redirect","setRedirect","createNewPost","ev","preventDefault","data","FormData","set","response","fetch","method","body","ok","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","children","type","placeholder","value","onChange","target","files","style","marginTop","_c","$RefreshReg$"],"sources":["E:/mern stack/blog app mern/frontend/src/pages/CreatePost.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst modules = {\r\n  toolbar: [\r\n    [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\r\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n    [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\r\n    ['link', 'image'],\r\n    [{ 'align': [] }],\r\n    ['clean'], // Remove formatting button\r\n  ],\r\n};\r\n\r\nconst formats = [\r\n  'header', 'font', 'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n  'list', 'bullet', 'indent', 'link', 'image', 'align',\r\n];\r\n\r\nconst CreatePost = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [summary, setSummary] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [file, setFiles] = useState(null); // Changed to null\r\n  const [redirect,setRedirect]=useState(false);\r\n\r\n   async function createNewPost(ev) {\r\n    ev.preventDefault(); // Move to the start of the function\r\n    const data = new FormData();\r\n    data.set('title', title);\r\n    data.set('summary', summary);\r\n    data.set('content', content);\r\n\r\n    if (file) { // Only set the file if it exists\r\n      data.set('file', file[0]); // Set the first file\r\n    }\r\n\r\n    // console.log(file); // Changed from files to file\r\n\r\n    // Uncomment and modify this section for your API call\r\n    const response =await fetch('http://localhost:4000/post', {\r\n        method: 'POST',\r\n        body: data, // Make sure to send FormData\r\n    })\r\n    if(response.ok)\r\n    {\r\n        setRedirect(true);\r\n    }\r\n  }\r\n  if(redirect)\r\n  {\r\n    return <Navigate to/>\r\n  }\r\n  return (\r\n    <form onSubmit={createNewPost}>\r\n      <input\r\n        type=\"text\" // Changed from title\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={(ev) => setTitle(ev.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\" // Changed from summary\r\n        placeholder=\"Summary\"\r\n        value={summary}\r\n        onChange={(ev) => setSummary(ev.target.value)}\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        onChange={(ev) => setFiles(ev.target.files)} // Changed to files\r\n      />\r\n      <ReactQuill\r\n        value={content}\r\n        onChange={setContent}\r\n        modules={modules}\r\n        formats={formats}\r\n      />\r\n      <button style={{ marginTop: '5px' }}>Create Post</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CreatePost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}