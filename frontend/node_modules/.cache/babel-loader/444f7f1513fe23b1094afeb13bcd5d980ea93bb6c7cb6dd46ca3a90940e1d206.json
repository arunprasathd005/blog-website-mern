{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern stack\\\\blog app mern\\\\frontend\\\\src\\\\Post.js\";\nimport React from 'react';\nimport { formatISO9075 } from 'date-fns'; // Import the format function\nimport PropTypes from 'prop-types'; // Import PropTypes for type checking\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  title,\n  summary,\n  cover,\n  content,\n  createdAt\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: cover,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"texts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"author\",\n          href: \"/author/arun\",\n          children: \"arun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n          children: formatISO9075(new Date(createdAt))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"summary\",\n        children: summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"content\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n// Define prop types for better validation\n_c = Post;\nPost.propTypes = {\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  cover: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  createdAt: PropTypes.string.isRequired // Assuming createdAt is a string representation of date\n};\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","formatISO9075","PropTypes","jsxDEV","_jsxDEV","Post","title","summary","cover","content","createdAt","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","Date","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["E:/mern stack/blog app mern/frontend/src/Post.js"],"sourcesContent":["import React from 'react';\r\nimport { formatISO9075 } from 'date-fns'; // Import the format function\r\nimport PropTypes from 'prop-types'; // Import PropTypes for type checking\r\n\r\nconst Post = ({ title, summary, cover, content, createdAt }) => {\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"image\">\r\n        <img src={cover} alt={title} /> {/* Use cover prop for the image */}\r\n      </div>\r\n      <div className=\"texts\">\r\n        <h2>{title}</h2>\r\n        <p className=\"info\">\r\n          <a className=\"author\" href=\"/author/arun\">arun</a>\r\n          <time>{formatISO9075(new Date(createdAt))}</time> {/* Use createdAt prop */}\r\n        </p>\r\n        <p className=\"summary\">{summary}</p>\r\n        <p className=\"content\">{content}</p> {/* Display content */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Define prop types for better validation\r\nPost.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  cover: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n  createdAt: PropTypes.string.isRequired, // Assuming createdAt is a string representation of date\r\n};\r\n\r\nexport default Post;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,UAAU,CAAC,CAAC;AAC1C,OAAOC,SAAS,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,IAAI,GAAGA,CAAC;EAAEC,KAAK;EAAEC,OAAO;EAAEC,KAAK;EAAEC,OAAO;EAAEC;AAAU,CAAC,KAAK;EAC9D,oBACEN,OAAA;IAAKO,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBR,OAAA;MAAKO,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBR,OAAA;QAAKS,GAAG,EAAEL,KAAM;QAACM,GAAG,EAAER;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACNd,OAAA;MAAKO,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBR,OAAA;QAAAQ,QAAA,EAAKN;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChBd,OAAA;QAAGO,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACjBR,OAAA;UAAGO,SAAS,EAAC,QAAQ;UAACQ,IAAI,EAAC,cAAc;UAAAP,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAClDd,OAAA;UAAAQ,QAAA,EAAOX,aAAa,CAAC,IAAImB,IAAI,CAACV,SAAS,CAAC;QAAC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACJd,OAAA;QAAGO,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAEL;MAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpCd,OAAA;QAAGO,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAEH;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAAG,EAAA,GAnBMhB,IAAI;AAoBVA,IAAI,CAACiB,SAAS,GAAG;EACfhB,KAAK,EAAEJ,SAAS,CAACqB,MAAM,CAACC,UAAU;EAClCjB,OAAO,EAAEL,SAAS,CAACqB,MAAM,CAACC,UAAU;EACpChB,KAAK,EAAEN,SAAS,CAACqB,MAAM,CAACC,UAAU;EAClCf,OAAO,EAAEP,SAAS,CAACqB,MAAM,CAACC,UAAU;EACpCd,SAAS,EAAER,SAAS,CAACqB,MAAM,CAACC,UAAU,CAAE;AAC1C,CAAC;AAED,eAAenB,IAAI;AAAC,IAAAgB,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}