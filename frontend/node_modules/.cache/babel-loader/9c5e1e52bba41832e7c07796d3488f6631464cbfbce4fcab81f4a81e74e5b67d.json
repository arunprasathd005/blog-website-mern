{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern stack\\\\blog app mern\\\\frontend\\\\src\\\\pages\\\\IndexPage.js\",\n  _s = $RefreshSig$();\nimport Post from \"../Post\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function IndexPage() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:4000/post').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(posts => {\n      setPosts(posts);\n    }).catch(error => {\n      console.error('Fetch error:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: headerStyle,\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: postsContainerStyle,\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        ...post,\n        cover: post.cover,\n        style: postStyle\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: noPostsStyle,\n      children: \"No posts available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n// Inline styles\n_s(IndexPage, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = IndexPage;\nconst containerStyle = {\n  padding: '20px',\n  maxWidth: '800px',\n  margin: '0 auto',\n  backgroundColor: '#f9f9f9'\n};\nconst headerStyle = {\n  textAlign: 'center',\n  color: '#333',\n  fontSize: '32px',\n  marginBottom: '20px'\n};\nconst postsContainerStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'column',\n  gap: '20px'\n};\nconst postStyle = {\n  border: '1px solid #ddd',\n  borderRadius: '8px',\n  overflow: 'hidden',\n  boxShadow: '0 2px 5px rgba(0, 0, 0, 0.1)',\n  backgroundColor: '#fff',\n  transition: 'transform 0.2s',\n  padding: '15px'\n};\nconst noPostsStyle = {\n  textAlign: 'center',\n  color: '#666',\n  fontSize: '18px'\n};\n\n// You might want to add hover effects to the post component\n// For that, you can apply the hover style directly to your Post component or wrap it with a div\nvar _c;\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"names":["Post","useEffect","useState","jsxDEV","_jsxDEV","IndexPage","_s","posts","setPosts","fetch","then","response","ok","Error","json","catch","error","console","style","containerStyle","children","headerStyle","fileName","_jsxFileName","lineNumber","columnNumber","length","postsContainerStyle","map","post","cover","postStyle","_id","noPostsStyle","_c","padding","maxWidth","margin","backgroundColor","textAlign","color","fontSize","marginBottom","display","gridTemplateColumns","gap","border","borderRadius","overflow","boxShadow","transition","$RefreshReg$"],"sources":["E:/mern stack/blog app mern/frontend/src/pages/IndexPage.js"],"sourcesContent":["import Post from \"../Post\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function IndexPage() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/post')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(posts => {\r\n        setPosts(posts);\r\n      })\r\n      .catch(error => {\r\n        console.error('Fetch error:', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <h1 style={headerStyle}>Blog Posts</h1>\r\n      {posts.length > 0 ? (\r\n        <div style={postsContainerStyle}>\r\n          {posts.map(post => (\r\n            <Post key={post._id} {...post} cover={post.cover} style={postStyle} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p style={noPostsStyle}>No posts available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Inline styles\r\nconst containerStyle = {\r\n  padding: '20px',\r\n  maxWidth: '800px',\r\n  margin: '0 auto',\r\n  backgroundColor: '#f9f9f9',\r\n};\r\n\r\nconst headerStyle = {\r\n  textAlign: 'center',\r\n  color: '#333',\r\n  fontSize: '32px',\r\n  marginBottom: '20px',\r\n};\r\n\r\nconst postsContainerStyle = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'column',\r\n  gap: '20px',\r\n};\r\n\r\nconst postStyle = {\r\n  border: '1px solid #ddd',\r\n  borderRadius: '8px',\r\n  overflow: 'hidden',\r\n  boxShadow: '0 2px 5px rgba(0, 0, 0, 0.1)',\r\n  backgroundColor: '#fff',\r\n  transition: 'transform 0.2s',\r\n  padding: '15px',\r\n};\r\n\r\nconst noPostsStyle = {\r\n  textAlign: 'center',\r\n  color: '#666',\r\n  fontSize: '18px',\r\n};\r\n\r\n// You might want to add hover effects to the post component\r\n// For that, you can apply the hover style directly to your Post component or wrap it with a div\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}