{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern stack\\\\blog app mern\\\\frontend\\\\src\\\\pages\\\\Loginpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // Import useState\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loginpage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Change function name to login\n  async function login(ev) {\n    ev.preventDefault();\n    const response = await fetch('http://localhost:4000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      // Store the token or handle it as needed\n      localStorage.setItem('token', data.token);\n      console.log('Login successful:', data);\n    } else {\n      console.error('Login failed:', response.statusText);\n    }\n  }\n\n  // Define inline styles\n  const formStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100vh',\n    backgroundColor: '#f4f4f4'\n  };\n  const inputStyle = {\n    padding: '10px',\n    margin: '10px 0',\n    width: '300px',\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    fontSize: '16px'\n  };\n  const buttonStyle = {\n    padding: '10px 20px',\n    backgroundColor: '#4CAF50',\n    color: 'white',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontSize: '16px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: formStyle,\n    onSubmit: login,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: ev => setUsername(ev.target.value),\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: ev => setPassword(ev.target.value),\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonStyle,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Loginpage, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Loginpage;\nexport default Loginpage;\nvar _c;\n$RefreshReg$(_c, \"Loginpage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Loginpage","_s","username","setUsername","password","setPassword","login","ev","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","localStorage","setItem","token","console","log","error","statusText","formStyle","display","flexDirection","alignItems","justifyContent","height","backgroundColor","inputStyle","padding","margin","width","border","borderRadius","fontSize","buttonStyle","color","cursor","style","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["E:/mern stack/blog app mern/frontend/src/pages/Loginpage.js"],"sourcesContent":["import React, { useState } from 'react'; // Import useState\r\n\r\nconst Loginpage = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  // Change function name to login\r\n  async function login(ev) {\r\n    ev.preventDefault();\r\n    const response = await fetch('http://localhost:4000/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ username, password }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      // Store the token or handle it as needed\r\n      localStorage.setItem('token', data.token);\r\n      console.log('Login successful:', data);\r\n    } else {\r\n      console.error('Login failed:', response.statusText);\r\n    }\r\n  }\r\n\r\n  // Define inline styles\r\n  const formStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100vh',\r\n    backgroundColor: '#f4f4f4',\r\n  };\r\n\r\n  const inputStyle = {\r\n    padding: '10px',\r\n    margin: '10px 0',\r\n    width: '300px',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '5px',\r\n    fontSize: '16px',\r\n  };\r\n\r\n  const buttonStyle = {\r\n    padding: '10px 20px',\r\n    backgroundColor: '#4CAF50',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    fontSize: '16px',\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <form style={formStyle} onSubmit={login}>\r\n      <h1>Login</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"username\"\r\n        value={username}\r\n        onChange={ev => setUsername(ev.target.value)}\r\n        style={inputStyle}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"password\"\r\n        value={password}\r\n        onChange={ev => setPassword(ev.target.value)}\r\n        style={inputStyle}\r\n      />\r\n      <button style={buttonStyle}>Login</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Loginpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}