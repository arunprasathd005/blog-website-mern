{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern stack\\\\blog app mern\\\\frontend\\\\src\\\\pages\\\\Editor.js\",\n  _s = $RefreshSig$();\nimport ReactQuill from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css'; // Import the CSS for the snow theme\nimport React, { forwardRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Editor({\n  value,\n  onChange\n}) {\n  _s();\n  useEffect(() => {\n    const editorContainer = document.querySelector('.ql-editor'); // Grabbing the Quill editor\n\n    if (editorContainer) {\n      const config = {\n        childList: true,\n        subtree: true\n      };\n      const callback = mutationsList => {\n        for (let mutation of mutationsList) {\n          if (mutation.type === 'childList') {\n            console.log('Quill content changed');\n          }\n        }\n      };\n      const observer = new MutationObserver(callback);\n      observer.observe(editorContainer, config);\n\n      // Clean-up the observer when the component unmounts\n      return () => observer.disconnect();\n    }\n  }, []);\n  const modules = {\n    toolbar: [[{\n      header: '1'\n    }, {\n      header: '2'\n    }, {\n      font: []\n    }], [{\n      size: []\n    }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n      list: 'ordered'\n    }, {\n      list: 'bullet'\n    }, {\n      indent: '-1'\n    }, {\n      indent: '+1'\n    }], ['link', 'image', 'video'], ['clean'] // Remove formatting button\n    ]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: value,\n      theme: 'snow',\n      onChange: onChange,\n      modules: modules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Editor, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["ReactQuill","React","forwardRef","useEffect","jsxDEV","_jsxDEV","Editor","value","onChange","_s","editorContainer","document","querySelector","config","childList","subtree","callback","mutationsList","mutation","type","console","log","observer","MutationObserver","observe","disconnect","modules","toolbar","header","font","size","list","indent","className","children","theme","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/mern stack/blog app mern/frontend/src/pages/Editor.js"],"sourcesContent":["import ReactQuill from \"react-quill\";\r\nimport 'react-quill/dist/quill.snow.css'; // Import the CSS for the snow theme\r\nimport React, { forwardRef,useEffect } from \"react\";\r\n\r\n\r\nexport default function Editor({value,onChange}) {\r\n\r\n  useEffect(() => {\r\n    const editorContainer = document.querySelector('.ql-editor'); // Grabbing the Quill editor\r\n\r\n    if (editorContainer) {\r\n      const config = { childList: true, subtree: true };\r\n\r\n      const callback = (mutationsList) => {\r\n        for (let mutation of mutationsList) {\r\n          if (mutation.type === 'childList') {\r\n            console.log('Quill content changed');\r\n          }\r\n        }\r\n      };\r\n\r\n      const observer = new MutationObserver(callback);\r\n      observer.observe(editorContainer, config);\r\n\r\n      // Clean-up the observer when the component unmounts\r\n      return () => observer.disconnect();\r\n    }\r\n  }, []);\r\n  const modules = {\r\n    toolbar: [\r\n      [{ header: '1' }, { header: '2' }, { font: [] }],\r\n      [{ size: [] }],\r\n      ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n      [{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\r\n      ['link', 'image', 'video'],\r\n      ['clean'], // Remove formatting button\r\n    ],\r\n  };\r\n  \r\n  return (\r\n    <div className=\"content\">\r\n    <ReactQuill\r\n      value={value}\r\n      theme={'snow'}\r\n      onChange={onChange}\r\n      modules={modules} />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,aAAa;AACpC,OAAO,iCAAiC,CAAC,CAAC;AAC1C,OAAOC,KAAK,IAAIC,UAAU,EAACC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpD,eAAe,SAASC,MAAMA,CAAC;EAACC,KAAK;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAE/CN,SAAS,CAAC,MAAM;IACd,MAAMO,eAAe,GAAGC,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC;;IAE9D,IAAIF,eAAe,EAAE;MACnB,MAAMG,MAAM,GAAG;QAAEC,SAAS,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAK,CAAC;MAEjD,MAAMC,QAAQ,GAAIC,aAAa,IAAK;QAClC,KAAK,IAAIC,QAAQ,IAAID,aAAa,EAAE;UAClC,IAAIC,QAAQ,CAACC,IAAI,KAAK,WAAW,EAAE;YACjCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;UACtC;QACF;MACF,CAAC;MAED,MAAMC,QAAQ,GAAG,IAAIC,gBAAgB,CAACP,QAAQ,CAAC;MAC/CM,QAAQ,CAACE,OAAO,CAACd,eAAe,EAAEG,MAAM,CAAC;;MAEzC;MACA,OAAO,MAAMS,QAAQ,CAACG,UAAU,CAAC,CAAC;IACpC;EACF,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,OAAO,GAAG;IACdC,OAAO,EAAE,CACP,CAAC;MAAEC,MAAM,EAAE;IAAI,CAAC,EAAE;MAAEA,MAAM,EAAE;IAAI,CAAC,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC,EAChD,CAAC;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC,EACd,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,CAAC,EACvD,CAAC;MAAEC,IAAI,EAAE;IAAU,CAAC,EAAE;MAAEA,IAAI,EAAE;IAAS,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAC,EAAE;MAAEA,MAAM,EAAE;IAAK,CAAC,CAAC,EAC7E,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,EAC1B,CAAC,OAAO,CAAC,CAAE;IAAA;EAEf,CAAC;EAED,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,SAAS;IAAAC,QAAA,eACxB7B,OAAA,CAACL,UAAU;MACTO,KAAK,EAAEA,KAAM;MACb4B,KAAK,EAAE,MAAO;MACd3B,QAAQ,EAAEA,QAAS;MACnBkB,OAAO,EAAEA;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV;AAAC9B,EAAA,CA3CuBH,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}